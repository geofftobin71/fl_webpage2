const checkout_data = {{ checkout_data | dump | safe }};

luxon.Settings.defaultZoneName = "Pacific/Auckland";

var DateTime = luxon.DateTime;

const date_format = "yyyy-MM-dd";
const delivery_date_text_format = "EEE dd MMM yyyy";
const delivery_date_value_format = "EEEE d MMMM yyyy";

var cart_total = 0;

function displayCheckout() {

  if(cart.length === 0) {
    document.getElementById("empty-cart").style.display = "flex";
    return;
  }

  let delivery_date_select = document.getElementById("delivery-date");

  let day = DateTime.now();
  for(let i = 0; i < 15; ++i) {
    let text = day.toFormat(delivery_date_text_format);
    let value = day.toFormat(delivery_date_value_format);
    let option = new Option(text, value);
    option.className = "delivery-date-option";
    if(i == 0) {
      option.id = "today";
      option.text += " (today)";
    }
    delivery_date_select.options[delivery_date_select.options.length] = option;

    day = day.plus({days:1});
  }

  let delivery_option = localStorage.getItem("floriade-delivery-option") || "none";

  if(delivery_option !== "none") {
    document.getElementById("delivery-option-" + delivery_option).checked = true;
    selectDeliveryOption(delivery_option);
  }

  let cart_count = cart.length;
  let cart_items = "";

  cart.forEach(cart_item => {

	  let product = checkout_data.p[cart_item.product_id];
	  let price = parseFloat(parseInt(product.v[cart_item.variant_id], 16)) / 100.0;

    cart_items += '<div class="vertical flow">';
    cart_items += '<p>' + product.n;

    /*
    if(product.v.length) {
      variant = getVariant(product, cart_item["variant-id"]);
      cart_items += '<span class="font-size--1" style="white-space:nowrap"> ( ' + variant["name"] + ' )</span>';
    }
    */

    cart_items += '</p>';

    cart_items += '</div>';
    cart_items += '<p class="text-right">' + formatMoney(price) + '</p>';
	
    cart_total += price;
  });

  document.getElementById("cart-count").innerText = cart_count + (cart_count === 1 ? ' item' : ' items');
  document.getElementById("cart-total").innerText = formatMoney(cart_total);
  document.getElementById("cart-total-check").value = cart_total;

  if(true) {
    document.querySelectorAll(".delivery-group").forEach(element => {
      element.style.display = "block";
    });
  
    if(delivery_option !== "pickup") {
      document.getElementById("delivery-option-delivery").checked = true;
      selectDeliveryOption("delivery");
    }
  }

  document.getElementById("items").innerHTML = cart_items;
  document.getElementById("cart").value = JSON.stringify(cart);
  document.getElementById("checkout-form").style.display = "block";

  const inputs = document.querySelectorAll("input,select,textarea");
  for(let i = 0; i < inputs.length; i++) {
    let value = localStorage.getItem("floriade-" + inputs[i].id);
    if(value) { inputs[i].value = value; }
  };

  let delivery_date = document.getElementById("delivery-date");
  let opt = delivery_date.options[delivery_date.selectedIndex];
  if(!opt) {
    document.getElementById("delivery-date").options[0].selected = true;
  }

  disableInvalidDates(delivery_option);
  updateTotal();

  var form = document.getElementById("checkout-form");

  form.addEventListener("submit", async function(event) {
    event.preventDefault();

    disableCheckoutForm();

    const inputs = form.querySelectorAll("input,select");
    for(let i = 0; i < inputs.length; i++) {
      if(window.getComputedStyle(inputs[i]).display !== "none") {
        if(inputs[i].value.trim().length === 0) {
          showError(inputs[i].dataset.error || "Credit Card Number is required");
          inputs[i].style.border = "2px solid red";
          enableCheckoutForm();
          return false;
        }
      }
    };

    if(cart.length == 0) {
      document.getElementById("empty-cart").style.display = "flex";
      document.getElementById("checkout-form").style.display = "none";
      return false;
    }

    // form.submit();

    const form_data = new FormData(event.target);

/*
    fetch('/.netlify/functions/create-checkout-session', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(Object.fromEntries(form_data)),
      }).then((res) => res.json())
      .then(response => stripe.redirectToCheckout({sessionId: response.session_id}))
      .catch(error => console.error(error));
*/

    console.log('A');

    const res = await fetch('/.netlify/functions/create-checkout-session', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(Object.fromEntries(form_data))
    }); // .then((res) => res.json());

    const response = await res.json();

    console.log(JSON.stringify(response));

    const stripe = Stripe('{{ env.STRIPE_TEST_PUBLIC_KEY }}');

/*
    const { error } = await stripe.redirectToCheckout({
      sessionId: response.session_id
    });

    if(error) { console.error(error); }
    */

  },false);

  enableCheckoutForm();
}

function disableInvalidDates(delivery_option) {
  if(delivery_option === "none") { return; }

  const regular_shop_hours = checkout_data.rsh;
  const special_shop_hours = checkout_data.ssh;

  document.querySelectorAll(".delivery-date-option").forEach(element => {

    element.disabled = false;

    if(delivery_option === "delivery") {

      for(let dayName in regular_shop_hours) {
        if(!regular_shop_hours[dayName].delivery) {
          if(element.value.toLowerCase().startsWith(dayName.substr(0,3).toLowerCase())) {
            element.disabled = true;
          }
        }
      }

      special_shop_hours.forEach(item => {
        let special_date = DateTime.fromFormat(item.date, date_format);
        let element_date = DateTime.fromFormat(element.value, delivery_date_value_format);
        if(element_date.equals(special_date)) {
          element.disabled = !item.delivery;
        }
      });
    }

    if(delivery_option === "pickup") {

      for(let dayName in regular_shop_hours) {
        if(!regular_shop_hours[dayName].pickup) {
          if(element.value.toLowerCase().startsWith(dayName.substr(0,3).toLowerCase())) {
            element.disabled = true;
          }
        }
      }

      special_shop_hours.forEach(item => {
        let special_date = DateTime.fromFormat(item.date, date_format);
        let element_date = DateTime.fromFormat(element.value, delivery_date_value_format);
        if(element_date.equals(special_date)) {
          element.disabled = !item.pickup;
        }
      });
    }
  });

  const now = DateTime.now();
  const ten_am = DateTime.fromObject({hour:10});

  let today = document.getElementById("today");
  if((today) && (now > ten_am)) {
    today.disabled = true;
  }

  var delivery_date = document.getElementById("delivery-date");
  var opt = delivery_date.options[delivery_date.selectedIndex];
  if(opt && opt.disabled) {
    opt.selected = false;
    delivery_date.options[0].selected = true;
  }
}

function selectDeliveryOption(delivery_option) {
  localStorage.setItem("floriade-delivery-option", delivery_option);

  if(delivery_option === "pickup") {
    document.getElementById("delivery-date-label").innerText = "Pickup Date";
    document.getElementById("delivery-date-caption").innerText = "Orders must be received by 10am for same day pickup";
    document.getElementById("delivery-date").setAttribute("data-error","Pickup Date is required");
    document.querySelectorAll(".delivery-address-group").forEach(element => {
      element.style.display = "none";
    });
    document.getElementById("delivery-address").value = "";
    document.getElementById("delivery-suburb").options[0].selected = true;
    localStorage.removeItem("floriade-delivery-address");
    localStorage.removeItem("floriade-delivery-suburb");
  }

  if(delivery_option === "delivery") {
    document.getElementById("delivery-date-label").innerText = "Delivery Date";
    document.getElementById("delivery-date-caption").innerText = "Orders must be received by 10am for same day delivery - Minimum $20 delivery fee on Saturdays";
    document.getElementById("delivery-date").setAttribute("data-error","Delivery Date is required");
    document.querySelectorAll(".delivery-address-group").forEach(element => {
      element.style.display = "block";
    });
  }

  disableInvalidDates(delivery_option);
  updateTotal();
}

function obfuscate(str) {
    let buf = [];
    for (var i = str.length - 1; i >= 0; i--) {
      buf.unshift(['&#', str[i].charCodeAt(), ';'].join(''));
    }
    return buf.join('');
}

{#
function deobfuscate(str) {
  return str.replace(/&#(\d+);/g, function(match, dec) {
    return String.fromCharCode(dec);
  });
}
#}

function updateTotal() {
  const delivery_suburb = document.getElementById("delivery-suburb").value;
  const delivery_date = document.getElementById("delivery-date").value;
  const delivery_option = document.querySelector('input[name="delivery-option"]:checked').value;

  document.getElementById("delivery-total-check").value = 0;

  if(delivery_option === "none") {
    document.getElementById("total").innerText = formatMoney(cart_total);
  } else if(delivery_option === "pickup") {
    document.getElementById("delivery-heading").innerText = "Pickup in Store";
    document.getElementById("delivery-suburb-name").innerText = "";
    document.getElementById("delivery-total").innerText = "free";
    document.getElementById("total").innerText = formatMoney(cart_total);
  } else {
    if(delivery_suburb && delivery_date) {
      // Default delivery fee by Suburb
      let delivery_fee = parseFloat(parseInt(checkout_data.d[obfuscate(delivery_suburb)],16)) / 100.0;

      // Flat $20 on Saturday
      if(delivery_date.toLowerCase().startsWith("sat")) {
        delivery_fee = (delivery_fee < 20.0) ? 20.0 : delivery_fee;
      }

      // Flat Rate delivery fee on Special days
      /*
      for(let date in flat_rate_delivery_fees) {
        let flat_rate_date = DateTime.fromFormat(date, date_format);
        let element_date = DateTime.fromFormat(delivery_date, delivery_date_value_format);
        if(element_date.equals(flat_rate_date)) {
          let fee = parseFloat(flat_rate_delivery_fees[date]);
          if(fee === 0.0) {
            delivery_fee = fee;
          } else {
            delivery_fee = (delivery_fee < fee) ? fee : delivery_fee;
          }
        }
      }
      */

      document.getElementById("delivery-heading").innerText = "Delivery to";
      document.getElementById("delivery-suburb-name").innerText = delivery_suburb;
      document.getElementById("delivery-total").innerText = formatMoney(delivery_fee);
      document.getElementById("total").innerText = formatMoney(cart_total + delivery_fee);

      document.getElementById("delivery-total-check").value = delivery_fee;
    } else {
      document.getElementById("delivery-heading").innerText = "Delivery";
      document.getElementById("delivery-suburb-name").innerText = "";
      document.getElementById("delivery-total").innerText = "TBC";
      document.getElementById("total").innerText = "TBC"
    }
  }
}

function enableCheckoutForm() {
  document.getElementById("place-order-button").disabled = false;
  document.getElementById("spinner-icon").style.display = "none";
  document.getElementById("cart-icon").style.display = "inline-block";
  document.getElementById("submit-text").innerText = "Payment";
}

function disableCheckoutForm() {
  document.getElementById("place-order-button").disabled = true;
  document.getElementById("spinner-icon").style.display = "inline-block";
  document.getElementById("cart-icon").style.display = "none";
  document.getElementById("submit-text").innerText = "Submitting";
}

function cacheValue(e) {
  localStorage.setItem("floriade-" + e.id, e.value);
}
